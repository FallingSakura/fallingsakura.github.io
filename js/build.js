const{minify:minify}=require("terser"),fs=require("fs/promises"),path=require("path"),glob=require("glob-promise"),THEME_ROOT=path.join(__dirname,"../.."),SOURCE_DIR=path.join(THEME_ROOT,"source/js"),BUILD_DIR=path.join(THEME_ROOT,"source/js/build"),IGNORE_PATTERNS=[path.join(SOURCE_DIR,"libs/**"),path.join(BUILD_DIR,"**"),path.join(SOURCE_DIR,"build.js")],minifyOptions={compress:{dead_code:!0,drop_console:!1,drop_debugger:!0,keep_classnames:!0,keep_fnames:!0},mangle:{keep_classnames:!0,keep_fnames:!0},format:{comments:!1},module:!0,sourceMap:{filename:"source-map",url:"source-map.map"}};async function ensureDirectoryExists(e){try{await fs.mkdir(e,{recursive:!0})}catch(o){if("EEXIST"!==o.code)throw new Error(`Failed to create directory ${e}: ${o.message}`)}}async function copyFile(e,o){try{const i=path.dirname(o);await ensureDirectoryExists(i),await fs.copyFile(e,o),console.log(`✓ Copied ${e} -> ${o}`)}catch(o){throw console.error(`× Error copying ${e}:`,o),o}}async function processFile(e){try{const o=await fs.readFile(e,"utf8"),i=path.relative(SOURCE_DIR,e),s=path.join(BUILD_DIR,i),r=path.dirname(s),a={...minifyOptions,sourceMap:{...minifyOptions.sourceMap,filename:path.basename(e),url:`${path.basename(e)}.map`}},t=await minify(o,a);await ensureDirectoryExists(r),await fs.writeFile(s,t.code),t.map&&await fs.writeFile(`${s}.map`,t.map),console.log(`✓ Minified ${e} -> ${s}`)}catch(o){throw console.error(`× Error processing ${e}:`,o),o}}async function minifyJS(){try{await ensureDirectoryExists(BUILD_DIR);const e=await glob(`${SOURCE_DIR}/libs/**/*.js`),o=await glob(`${SOURCE_DIR}/**/*.js`,{ignore:IGNORE_PATTERNS});if(0===o.length&&0===e.length)return void console.log("No JavaScript files found to process");console.log(`Found ${o.length} files to minify and ${e.length} lib files to copy...`);for(const o of e){const e=path.relative(SOURCE_DIR,o),i=path.join(BUILD_DIR,e);await copyFile(o,i)}const i=4,s=[];for(let e=0;e<o.length;e+=i)s.push(o.slice(e,e+i));for(const e of s)await Promise.all(e.map(processFile));console.log("\n✓ All files processed successfully!")}catch(e){console.error("× Build failed:",e),process.exit(1)}}minifyJS().catch(e=>{console.error("× Unhandled error:",e),process.exit(1)});